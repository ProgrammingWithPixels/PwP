[
  {
    "task_id": 0,
    "query": "You have 'read' access to the file 'unpackme.flag.py' that contains the hidden flag",
    "gold": "picoCTF{175_chr157m45_85f5d0ac}",
    "source": "https://play.picoctf.org/practice/challenge/314",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 1,
    "query": "You should utilize the 'dds2-alpine.flag.img.gz' image. All we know is the file with the flag is named `down-at-the-bottom.txt`. The 'sleuthkit' tools can be used for help.",
    "gold": "picoCTF{f0r3ns1c4t0r_n0v1c3_f5565e7b}",
    "setup": "wget https://mercury.picoctf.net/static/aed64c508175df5fe23207c10e0e47e5/dds2-alpine.flag.img.gz",
    "source": "https://play.picoctf.org/practice/challenge/137",
    "tags": ["Forensics"]
  },
  {
    "task_id": 2,
    "query": "How about some hide and seek heh? Find the hidden flag in 'trace_task_2.pcap'",
    "gold": "picoCTF{P64P_4N4L7S1S_SU55355FUL_5b6a6061}",
    "source": "https://play.picoctf.org/practice/challenge/362",
    "tags": ["Forensics"]
  },
  {
    "task_id": 3,
    "query": "I stopped using YellowPages and moved onto WhitePages... but the page they gave me is all blank!",
    "gold": "picoCTF{not_all_spaces_are_created_equal_c54f27cd05c2189f8147cc6f5deb2e56}",
    "source": "https://play.picoctf.org/practice/challenge/51",
    "tags": ["Forensics"]
  },
  {
    "task_id": 4,
    "query": "This file has a flag in plain sight (aka \"in-the-clear\").",
    "gold": "picoCTF{s4n1ty_v3r1f13d_2fd6ed29}",
    "source": "https://play.picoctf.org/practice/challenge/147",
    "tags": ["General Skills"]
  },
  {
    "task_id": 5,
    "query": "Cryptography can be easy, do you know what ROT13 is? cvpbPGS{abg_gbb_onq_bs_n_ceboyrz}",
    "gold": "picoCTF{not_too_bad_of_a_problem}",
    "source": "https://github.com/kevinjycui/picoCTF-2019-writeup/blob/master/Cryptography/13/README.md",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 6,
    "query": "Python scripts are invoked kind of like programs in the Terminal... Can you run this Python script using this password to get the flag?",
    "gold": "picoCTF{4p0110_1n_7h3_h0us3_ac9bd0ff}",
    "source": "https://play.picoctf.org/practice/challenge/166",
    "tags": ["General Skills"]
  },
  {
    "task_id": 7,
    "query": "Can you invoke help flags for a tool or binary? This program has extraordinarily helpful information...",
    "gold": "picoCTF{b1scu1ts_4nd_gr4vy_f0668f62}",
    "source": "https://play.picoctf.org/practice/challenge/170",
    "tags": ["General Skills"]
  },
  {
    "task_id": 8,
    "query": "Files can always be changed in a secret way. Can you find the flag?",
    "gold": "picoCTF{the_m3tadata_1s_modified}",
    "source": "https://play.picoctf.org/practice/challenge/186",
    "tags": ["Forensics"]
  },
  {
    "task_id": 9,
    "query": "There is a nice program that you can talk to by using this command in a shell: $ nc mercury.picoctf.net 43239, but it doesn't speak English...",
    "gold": "picoCTF{g00d_k1tty!_n1c3_k1tty!_7c0821f5}",
    "source": "https://play.picoctf.org/practice/challenge/156",
    "tags": ["General Skills"]
  },
  {
    "task_id": 10,
    "query": "I wonder what this really is...\n''.join([chr((ord(flag[i]) << 8) + ord(flag[i + 1])) for i in range(0, len(flag), 2)])",
    "gold": "picoCTF{16_bits_inst34d_of_8_d52c6b93}",
    "source": "https://play.picoctf.org/practice/challenge/104",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 11,
    "query": "Can you look at the data in this binary: static? The given BASH script might help!",
    "gold": "picoCTF{d15a5m_t34s3r_6f8c8200}",
    "source": "https://play.picoctf.org/practice/challenge/163",
    "tags": ["General Skills"]
  },
  {
    "task_id": 12,
    "query": "In RSA, a small e value can be problematic, but what about N? Can you decrypt this?",
    "gold": "picoCTF{sma11_N_n0_g0od_00264570}",
    "source": "https://play.picoctf.org/practice/challenge/162",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 13,
    "query": "keygenme-trial.py",
    "gold": "picoCTF{1n_7h3_|<3y_of_ac73dc29}",
    "source": "https://play.picoctf.org/practice/challenge/121",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 14,
    "query": "Matryoshka dolls are a set of wooden dolls of decreasing size placed one inside another. What's the final one? (Check the given image)",
    "gold": "picoCTF{4f11048e83ffc7d342a15bd2309b47de}",
    "source": "https://play.picoctf.org/practice/challenge/129",
    "setup": "git clone git@github.com:ReFirmLabs/binwalk.git",
    "tags": ["Forensics"]
  },
  {
    "task_id": 15,
    "query": "crackme.py",
    "gold": "picoCTF{1|\/|_4_p34|\\|ut_f3bc410e}",
    "source": "https://play.picoctf.org/practice/challenge/175",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 16,
    "query": "Kishor Balan tipped us off that the following code may need inspection: https://jupiter.challenges.picoctf.org/problem/44924/",
    "gold": "picoCTF{tru3_d3t3ct1ve_0r_ju5t_lucky?f10be399}",
    "source": "https://play.picoctf.org/practice/challenge/18",
    "tags": ["Web Exploitation"]
  },
  {
    "task_id": 17,
    "query": "If I told you a word started with 0x70 in hexadecimal, what would it start with in ASCII?",
    "gold": "picoCTF{p}",
    "source": "https://play.picoctf.org/practice/challenge/22",
    "tags": ["General Skills"]
  },
  {
    "task_id": 18,
    "query": "What is 0x3D (base 16) in decimal (base 10)?",
    "gold": "picoCTF{61}",
    "source": "https://play.picoctf.org/practice/challenge/58",
    "tags": ["General Skills"]
  },
  {
    "task_id": 19,
    "query": "Can you convert the number 42 (base 10) to binary (base 2)?",
    "gold": "picoCTF{101010}",
    "source": "https://play.picoctf.org/practice/challenge/86",
    "tags": ["General Skills"]
  },
  {
    "task_id": 20,
    "query": "Using netcat (nc) is going to be pretty important. Can you connect to jupiter.challenges.picoctf.org at port 25103 to get the flag?",
    "gold": "picoCTF{nEtCat_Mast3ry_d0c64587}",
    "source": "https://play.picoctf.org/practice/challenge/34",
    "tags": ["General Skills"]
  },
  {
    "task_id": 21,
    "query": "Can you find the flag in the given file without running it?",
    "gold": "picoCTF{5tRIng5_1T_d66c7bb7}",
    "source": "https://play.picoctf.org/practice/challenge/37",
    "tags": ["General Skills"]
  },
  {
    "task_id": 22,
    "query": "What does this bDNhcm5fdGgzX3IwcDM1 mean? I think it has something to do with bases.",
    "gold": "picoCTF{l3arn_th3_r0p35}",
    "source": "https://play.picoctf.org/practice/challenge/67",
    "tags": ["General Skills"]
  },
  {
    "task_id": 23,
    "query": "Can you find the flag in file? This would be really tedious to look through manually, something tells me there is a better way.",
    "gold": "picoCTF{grep_is_good_to_find_things_f77e0797}",
    "source": "https://play.picoctf.org/practice/challenge/85",
    "tags": ["General Skills"]
  },
  {
    "task_id": 24,
    "query": "Run the Python script code.py in the same directory as codebook.txt.",
    "gold": "picoCTF{c0d3b00k_455157_d9aa2df2}",
    "source": "https://play.picoctf.org/practice/challenge/238",
    "tags": ["General Skills"]
  },
  {
    "task_id": 25,
    "query": "Run the Python script and convert the given number from decimal to binary to get the flag.",
    "gold": "picoCTF{4ll_y0ur_b4535_722f6b39}",
    "source": "https://play.picoctf.org/practice/challenge/239",
    "tags": ["General Skills"]
  },
  {
    "task_id": 26,
    "query": "Fix the syntax error in this Python script to print the flag.",
    "gold": "picoCTF{1nd3nt1ty_cr1515_09ee727a}",
    "source": "https://play.picoctf.org/practice/challenge/240",
    "tags": ["General Skills"]
  },
  {
    "task_id": 27,
    "query": "Fix the syntax error in the Python script to print the flag.",
    "gold": "picoCTF{3qu4l1ty_n0t_4551gnm3nt_4863e11b}",
    "source": "https://play.picoctf.org/practice/challenge/241",
    "tags": ["General Skills"]
  },
  {
    "task_id": 28,
    "query": "Our flag printing service has started glitching! $ nc saturn.picoctf.net 55826",
    "gold": "picoCTF{gl17ch_m3_n07_9c42a45d}",
    "source": "https://play.picoctf.org/practice/challenge/242",
    "tags": ["General Skills"]
  },
  {
    "task_id": 29,
    "query": "If you want to hash with the best, beat this test! nc saturn.picoctf.net 50363",
    "gold": "picoCTF{4ppl1c4710n_r3c31v3d_3eb82b73}",
    "source": "https://play.picoctf.org/practice/challenge/243",
    "tags": ["General Skills"]
  },
  {
    "task_id": 30,
    "query": "Can you crack the password to get the flag?",
    "gold": "picoCTF{545h_r1ng1ng_fa343060}",
    "source": "https://play.picoctf.org/practice/challenge/245",
    "tags": ["General Skills"]
  },
  {
    "task_id": 31,
    "query": "Can you crack the password to get the flag?",
    "gold": "picoCTF{tr45h_51ng1ng_489dea9a}",
    "source": "https://play.picoctf.org/practice/challenge/246",
    "tags": ["General Skills"]
  },
  {
    "task_id": 32,
    "query": "Can you crack the password to get the flag? There are 7 potential passwords with 1 being correct. You can find these by examining the password checker script.",
    "gold": "picoCTF{m45h_fl1ng1ng_cd6ed2eb}",
    "source": "https://play.picoctf.org/practice/challenge/247",
    "tags": ["General Skills"]
  },
  {
    "task_id": 33,
    "query": "Can you crack the password to get the flag? There are 100 potential passwords with only 1 being correct. You can find these by examining the password checker script.",
    "gold": "picoCTF{fl45h_5pr1ng1ng_d770d48c}",
    "source": "https://play.picoctf.org/practice/challenge/248",
    "tags": ["General Skills"]
  },
  {
    "task_id": 34,
    "query": "Can you crack the password to get the flag?",
    "gold": "picoCTF{h45h_sl1ng1ng_40f26f81}",
    "source": "https://play.picoctf.org/practice/challenge/249",
    "tags": ["General Skills"]
  },
  {
    "task_id": 35,
    "query": "Download the script (https://artifacts.picoctf.net/c/34/runme.py) with the wget command and run it with python3 to get the flag.",
    "gold": "picoCTF{run_s4n1ty_run}",
    "source": "https://play.picoctf.org/practice/challenge/250",
    "tags": ["General Skills"]
  },
  {
    "task_id": 36,
    "query": "Find the flag in the Python script!",
    "gold": "picoCTF{7h3_r04d_l355_7r4v3l3d_8e47d128}",
    "source": "https://play.picoctf.org/practice/challenge/251",
    "tags": ["General Skills"]
  },
  {
    "task_id": 37,
    "query": "Unzip this archive and find the file named 'uber-secret.txt'",
    "gold": "picoCTF{f1nd_15_f457_ab443fd1}",
    "source": "https://play.picoctf.org/practice/challenge/320",
    "tags": ["General Skills"]
  },
  {
    "task_id": 38,
    "query": "Unzip this archive and find the flag.",
    "gold": "picoCTF{gr3p_15_m4g1c_ef8790dc}",
    "source": "https://play.picoctf.org/practice/challenge/322",
    "tags": ["General Skills"]
  },
  {
    "task_id": 39,
    "query": "To get truly 1337, you must understand different data encodings, such as hexadecimal or binary. Can you get the flag from this program to prove you are on the way to becoming 1337? Connect with nc jupiter.challenges.picoctf.org 15130.",
    "gold": "picoCTF{learning_about_converting_values_02167de8}",
    "source": "https://play.picoctf.org/practice/challenge/35",
    "tags": ["General Skills"]
  },
  {
    "task_id": 40,
    "query": "Convert the following string of ASCII numbers into a readable string: 0x70 0x69 0x63 0x6f 0x43 0x54 0x46 0x7b 0x34 0x35 0x63 0x31 0x31 0x5f 0x6e 0x30 0x5f 0x71 0x75 0x33 0x35 0x37 0x31 0x30 0x6e 0x35 0x5f 0x31 0x6c 0x6c 0x5f 0x74 0x33 0x31 0x31 0x5f 0x79 0x33 0x5f 0x6e 0x30 0x5f 0x6c 0x31 0x33 0x35 0x5f 0x34 0x34 0x35 0x64 0x34 0x31 0x38 0x30 0x7d",
    "gold": "picoCTF{45c11_n0_qu35710n5_1ll_t311_y3_n0_l135_445d4180}",
    "source": "https://play.picoctf.org/practice/challenge/390",
    "tags": ["General Skills"]
  },
  {
    "task_id": 41,
    "query": "Sometimes you need to handle process data outside of a file. Can you find a way to keep the output from this program and search for the flag? Connect to jupiter.challenges.picoctf.org 14291.",
    "gold": "picoCTF{digital_plumb3r_ea8bfec7}",
    "source": "https://play.picoctf.org/practice/challenge/48",
    "tags": ["General Skills"]
  },
  {
    "task_id": 42,
    "query": "There's a flag shop selling stuff, can you buy a flag? Connect with nc jupiter.challenges.picoctf.org 44566. Source code given in store.c",
    "gold": "picoCTF{m0n3y_bag5_68d16363}",
    "source": "https://play.picoctf.org/practice/challenge/49",
    "tags": ["General Skills"]
  },
  {
    "task_id": 43,
    "query": "Best Stuff - Cheap Stuff, Buy Buy Buy... The shop is open for business at nc mercury.picoctf.net 10337. Source code given in source",
    "gold": "picoCTF{b4d_brogrammer_3da34a8f}",
    "source": "https://play.picoctf.org/practice/challenge/134",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 44,
    "query": "Your mission is to enter Dr. Evil's laboratory and retrieve the blueprints for his Doomsday Project. The laboratory is protected by a series of locked vault doors. Each door is controlled by a computer and requires a password to open. Unfortunately, our undercover agents have not been able to obtain the secret passwords for the vault doors, but one of our junior agents obtained the source code for each vault's computer! You will need to read the source code for each level to figure out what the password is for that vault door. As a warmup, we have created a replica vault in our training facility. The source code for the training vault is here",
    "gold": "picoCTF{w4rm1ng_Up_w1tH_jAv4_be8d9806f18}",
    "source": "https://play.picoctf.org/practice/challenge/7",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 45,
    "query": "This vault uses some complicated arrays! I hope you can make sense of it, special agent.",
    "gold": "picoCTF{d35cr4mbl3_tH3_cH4r4cT3r5_75092e}",
    "source": "https://play.picoctf.org/practice/challenge/12",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 46,
    "query": "This vault uses for-loops and byte arrays. The source code for this vault is here:",
    "gold": "picoCTF{jU5t_a_s1mpl3_an4gr4m_4_u_79958f}",
    "source": "https://play.picoctf.org/practice/challenge/60",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 47,
    "query": "This vault uses ASCII encoding for the password.",
    "gold": "picoCTF{jU5t_4_bUnCh_0f_bYt3s_8f4a6cbf3b}",
    "source": "https://play.picoctf.org/practice/challenge/71",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 48,
    "query": "This vault door uses a different change of base as well as URL encoding!",
    "gold": "picoCTF{c0nv3rt1ng_fr0m_ba5e_64_e3152bf4}",
    "source": "https://play.picoctf.org/practice/challenge/77",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 49,
    "query": "This vault uses an XOR encryption scheme.",
    "gold": "picoCTF{n0t_mUcH_h4rD3r_tH4n_x0r_948b888}",
    "source": "https://play.picoctf.org/practice/challenge/45",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 50,
    "query": "This vault uses bit shifts to convert a password string into an array of integers. Hurry, agent, we are running out of time to stop Dr. Evil's nefarious plans!",
    "gold": "picoCTF{A_b1t_0f_b1t_sh1fTiNg_dc80e28124}",
    "source": "https://play.picoctf.org/practice/challenge/65",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 51,
    "query": "Apparently Dr. Evil's minions knew that our agency was making copies of their source code, because they intentionally sabotaged this source code in order to make it harder for our agents to analyze and crack into! The result is a quite mess, but I trust that my best special agent will find a way to solve it.",
    "gold": "picoCTF{s0m3_m0r3_b1t_sh1fTiNg_2e762b0ab}",
    "source": "https://play.picoctf.org/practice/challenge/10",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 52,
    "query": "A program has been provided to you, what happens if you try to run it on the command line?",
    "gold": "picoCTF{U51N6_Y0Ur_F1r57_F113_e5559d46}",
    "source": "https://play.picoctf.org/practice/challenge/266",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 53,
    "query": "Another program, but this time, it seems to want some input. What happens if you try to run it on the command line with input \"Hello!\"?",
    "gold": "picoCTF{F1r57_4rgum3n7_be0714da}",
    "source": "https://play.picoctf.org/practice/challenge/267",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 54,
    "query": "Find the flag being held on this server to get aHEAD of the competition http://mercury.picoctf.net:34561/",
    "gold": "picoCTF{r3j3ct_th3_du4l1ty_8f878508}",
    "source": "https://play.picoctf.org/practice/challenge/132",
    "hint": "Maybe you have more than 2 choices",
    "tags": ["Web Exploitation"]
  },
  {
    "task_id": 55,
    "query": "The numbers... what do they mean?",
    "gold": "picoCTF{thenumbersmason}",
    "source": "https://play.picoctf.org/practice/challenge/68",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 56,
    "query": "What do the flags mean?",
    "gold": "picoCTF{f1ag5and5tuff}",
    "source": "https://play.picoctf.org/practice/challenge/31",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 57,
    "query": "There's tapping coming in from the wires. What's it saying nc jupiter.challenges.picoctf.org 9422.",
    "gold": "picoCTF{M0RS3C0D31SFUN2683824610}",
    "source": "https://play.picoctf.org/practice/challenge/21",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 58,
    "query": "How about we take you on an adventure on exploring certificate signing requests. Take a look at this CSR file",
    "gold": "picoCTF{read_mycert_57f58832}",
    "source": "https://play.picoctf.org/practice/challenge/367",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 59,
    "query": "Someone just sent you an email claiming to be Google's co-founder Larry Page but you suspect a scam. Can you help us identify whose mail server the email actually originated from? The email file is `email-export.eml`. Flag: picoCTF{FirstnameLastname}",
    "gold": "picoCTF{WilhelmZwalina}",
    "source": "https://play.picoctf.org/practice/challenge/388",
    "tags": ["Forensics"]
  },
  {
    "task_id": 60,
    "query": "Can you make sense of this file?",
    "gold": "picoCTF{base64_n3st3d_dic0d!n8_d0wnl04d3d_73494190}",
    "source": "https://play.picoctf.org/practice/challenge/371",
    "tags": ["General Skills"]
  },
  {
    "task_id": 61,
    "query": "Attackers have hidden information in a very large mass of data in the past, maybe they are still doing it.",
    "gold": "picoCTF{gr3p_15_@w3s0m3_4c479940}",
    "source": "https://play.picoctf.org/practice/challenge/279",
    "tags": ["Forensics"]
  },
  {
    "task_id": 62,
    "query": "I decided to try something noone else has before. I made a bot to automatically trade stonks for me using AI and machine learning. I wouldn't believe you if you told me it's unsecure!. Source is vuln.c. Provide the flag here: nc mercury.picoctf.net 6989",
    "gold": "picoCTF{I_l05t_4ll_my_m0n3y_0a853e52}",
    "source": "https://play.picoctf.org/practice/challenge/105",
    "tags": ["Binary Exploitation"]
  },
  {
    "task_id": 63,
    "query": "Using tabcomplete in the Terminal will add years to your life, esp. when dealing with long rambling directory structures and filenames.",
    "gold": "picoCTF{l3v3l_up!_t4k3_4_r35t!_2bcfb2ab}",
    "source": "https://play.picoctf.org/practice/challenge/176",
    "tags": ["General Skills"]
  },
  {
    "task_id": 64,
    "query": "Take the packet capture file and use packet analysis software to find the flag.",
    "gold": "picoCTF{p4ck37_5h4rk_ceccaa7f}",
    "source": "https://play.picoctf.org/practice/challenge/286",
    "tags": ["Forensics"]
  },
  {
    "task_id": 65,
    "query": "Use `srch_strings` from the sleuthkit and some terminal-fu to find a flag in this disk image: dds1-alpine.flag.img.gz",
    "gold": "picoCTF{f0r3ns1c4t0r_n30phyt3_a6f4cab5}",
    "source": "https://play.picoctf.org/practice/challenge/113",
    "tags": ["Forensics"]
  },
  {
    "task_id": 66,
    "query": "Use mmls on it to find the size of the Linux partition. Connect to the remote checker service to check your answer and get the flag. nc saturn.picoctf.net 64605",
    "gold": "picoCTF{mm15_f7w!}",
    "source": "https://play.picoctf.org/practice/challenge/301",
    "tags": ["Forensics"]
  },
  {
    "task_id": 67,
    "query": "Now you DON’T see me. This report has some critical data in it, some of which have been redacted correctly, while some were not. Can you find an important key that was not redacted properly?",
    "gold": "picoCTF{C4n_Y0u_S33_m3_fully}",
    "source": "https://play.picoctf.org/practice/challenge/290",
    "tags": ["Forensics"]
  },
  {
    "task_id": 68,
    "query": "Can you figure out what is in the eax register in this assembly dump? Put your answer in the picoCTF flag format: picoCTF{n} where n is the contents of the eax register in the decimal number base. If the answer was 0x11 your flag would be picoCTF{17}.",
    "gold": "picoCTF{654874}",
    "source": "https://play.picoctf.org/practice/challenge/392",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 69,
    "query": "What happens if you have a small exponent? There is a twist though, we padded the plaintext so that (M ** e) is just barely larger than N. Let's decrypt this ciphertext",
    "gold": "picoCTF{e_sh0u1d_b3_lArg3r_0b39bbb1}",
    "source": "https://play.picoctf.org/practice/challenge/188",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 70,
    "query": "'Suspicious' is written all over this disk image. Download suspicious.dd.sda1",
    "gold": "picoCTF{b3_5t111_mL|_<3_b945d7b6}",
    "source": "https://play.picoctf.org/practice/challenge/87",
    "tags": ["Forensics"]
  },
  {
    "task_id": 71,
    "query": "I've hidden a flag in this file. Can you find it? Forensics is fun.pptm",
    "gold": "picoCTF{D1d_u_kn0w_ppts_r_z1p5}",
    "source": "https://play.picoctf.org/practice/challenge/130",
    "tags": ["Forensics"]
  },
  {
    "task_id": 72,
    "query": "We found a brand new type of encryption, can you break the secret code? (Wrap with picoCTF{}) dcebcmebecamcmanaedbacdaanafagapdaaoabaaafdbapdpaaapadanandcafaadbdaapdpandcac new_caesar.py",
    "gold": "picoCTF{et_tu?_07d5c0892c1438d2b32600e83dc2b0e5}",
    "source": "https://play.picoctf.org/practice/challenge/158",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 73,
    "query": "A one-time pad is unbreakable, but can you manage to recover the flag? (Wrap with picoCTF{}) nc mercury.picoctf.net 36981 otp.py",
    "gold": "picoCTF{7f9da29f40499a98db220380a57746a4}",
    "source": "https://play.picoctf.org/practice/challenge/125",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 74,
    "query": "The one time pad can be cryptographically secure, but not when you know the key. Can you solve this? We've given you the encrypted flag, key, and a table to help UFJKXQZQUNB with the key of SOLVECRYPTO. Can you use given table.txt to solve it?.",
    "gold": "picoCTF{CRYPTOISFUN}",
    "source": "https://play.picoctf.org/practice/challenge/43",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 75,
    "query": "Can you figure out what is in the eax register in this assembly dump? Put your answer in the picoCTF flag format: picoCTF{n} where n is the contents of the eax register in the decimal number base. If the answer was 0x11 your flag would be picoCTF{17}.",
    "gold": "picoCTF{2619997}",
    "source": "https://play.picoctf.org/practice/challenge/393",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 76,
    "query": "What does asm1(0x6fa) return? Submit the flag as a hexadecimal value (starting with '0x'). NOTE: Your submission for this question will NOT be in the normal flag format.",
    "gold": "0x6e8",
    "source": "https://play.picoctf.org/practice/challenge/20",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 77,
    "query": "For what argument does this program print `win` with variables 87, 3 and 3? File: chall_1.S Flag format: picoCTF{XXXXXXXX} -> (hex, lowercase, no 0x, and 32 bits. ex. 5614267 would be picoCTF{0055aabb})",
    "gold": "picoCTF{000000e8}",
    "source": "https://play.picoctf.org/practice/challenge/111",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 78,
    "query": "Can you get the flag? Run this Python program in the same directory as this encrypted flag.",
    "gold": "picoCTF{d30bfu5c4710n_f7w_5e14b257}",
    "source": "https://play.picoctf.org/practice/challenge/256",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 79,
    "query": "To get the flag, you must break RSA not once, but three times! Given public-key.txt and encrypt.txt.",
    "gold": "picoCTF{1_gu3ss_tr1pl3_rs4_1snt_tr1pl3_s3cur3!!!!!!}",
    "source": "https://play.picoctf.org/practice/challenge/209",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 80,
    "query": "Can you decrypt this message? Decrypt cipher.txt using this key 'CYLAB'.",
    "gold": "picoCTF{D0NT_US3_V1G3N3R3_C1PH3R_ae82272q}",
    "source": "https://play.picoctf.org/practice/challenge/316",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 81,
    "query": "What integer does this program print with argument 1048110976? File: chall_3.S Flag format: picoCTF{XXXXXXXX} -> (hex, lowercase, no 0x, and 32 bits. ex. 5614267 would be picoCTF{0055aabb})",
    "gold": "picoCTF{00000030}",
    "source": "https://play.picoctf.org/practice/challenge/106",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 82,
    "query": "What integer does this program print with argument 3736234946? File: chall_2.S Flag format: picoCTF{XXXXXXXX} -> (hex, lowercase, no 0x, and 32 bits. ex. 5614267 would be picoCTF{0055aabb})",
    "gold": "picoCTF{9C174346}",
    "source": "https://play.picoctf.org/practice/challenge/150",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 83,
    "query": "What integer does this program print with arguments 266134863 and 1592237099? File: chall.S Flag format: picoCTF{XXXXXXXX} -> (hex, lowercase, no 0x, and 32 bits. ex. 5614267 would be picoCTF{0055aabb})",
    "gold": "picoCTF{5EE79C2B}",
    "source": "https://play.picoctf.org/practice/challenge/160",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 84,
    "query": "What integer does this program print with argument 3251372985? File: chall_4.S Flag format: picoCTF{XXXXXXXX} -> (hex, lowercase, no 0x, and 32 bits. ex. 5614267 would be picoCTF{0055aabb})",
    "gold": "picoCTF{C1CC042C}",
    "source": "https://play.picoctf.org/practice/challenge/183",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 85,
    "query": "It's not a bad idea to learn to read Powershell. We give you the output, but do you think you can find the input? rev_PS.ps1 output.txt",
    "gold": "picoCTF{2018highw@y_2_pow3r$hel!}",
    "source": "https://play.picoctf.org/practice/challenge/119",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 86,
    "query": "Another slight twist on a classic, see if you can recover the flag. (Wrap with picoCTF{}) lejjlnjmjndkmjinkilbmlljjkmnakmmighhocmllojhjmaijpiohnlojmokjkja new_vignere.py",
    "gold": "picoCTF{73885da7b4e46e4d01ee934278716e68}",
    "source": "https://play.picoctf.org/practice/challenge/148",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 87,
    "query": "Let's start off simple, can you overflow the correct buffer? You can view source in vuln.c. And connect with it using: nc saturn.picoctf.net 65443 to get the flag",
    "gold": "picoCTF{ov3rfl0ws_ar3nt_that_bad_c5ca6248}",
    "source": "https://play.picoctf.org/practice/challenge/257",
    "tags": ["Forensics"]
  },
  {
    "task_id": 88,
    "query": "The program provided allows you to write to a file and read what you wrote from it. Try playing around with it and see if you can break it! Connect to the program with netcat: $ nc saturn.picoctf.net 51109. The program's source code with the flag redacted can be downloaded here.",
    "gold": "picoCTF{M4K3_5UR3_70_CH3CK_Y0UR_1NPU75_E0394EC0}",
    "source": "https://play.picoctf.org/practice/challenge/252",
    "tags": ["Binary Exploitation"]
  },
  {
    "task_id": 89,
    "query": "Here's a program that plays rock, paper, scissors against you. I hear something good happens if you win 5 times in a row. Connect to the program with netcat: $ nc saturn.picoctf.net 62039 The program's source code with the flag redacted can be downloaded here.",
    "gold": "picoCTF{50M3_3X7R3M3_1UCK_B69E01B8}",
    "source": "https://play.picoctf.org/practice/challenge/293",
    "tags": ["Binary Exploitation"]
  },
  {
    "task_id": 90,
    "query": "Cryptography can be easy, do you know what ROT13 is? cvpbPGS{abg_gbb_onq_bs_n_ceboyrz}",
    "gold": "picoCTF{not_too_bad_of_a_problem}",
    "source": "https://play.picoctf.org/practice/challenge/62",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 91,
    "query": "We found this weird message in message.txt being passed around on the servers, we think we have a working decryption scheme. Take each number mod 37 and map it to the following character set: 0-25 is the alphabet (uppercase), 26-35 are the decimal digits, and 36 is an underscore. Wrap your decrypted message in the picoCTF flag format (i.e. picoCTF{decrypted_message})",
    "gold": "picoCTF{R0UND_N_R0UND_79C18FB3}",
    "source": "https://play.picoctf.org/practice/challenge/253",
    "tags": ["Binary Exploitation"]
  },
  {
    "task_id": 92,
    "query": "A new modular challenge in messages.txt! Take each number mod 41 and find the modular inverse for the result. Then map to the following character set: 1-26 are the alphabet, 27-36 are the decimal digits, and 37 is an underscore. Wrap your decrypted message in the picoCTF flag format (i.e. picoCTF{decrypted_message})",
    "gold": "picoCTF{1NV3R53LY_H4RD_C680BDC1}",
    "source": "https://play.picoctf.org/practice/challenge/254",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 93,
    "query": "Our data got corrupted on the way here. Luckily, nothing got replaced, but every block of 3 got scrambled around! The first word seems to be three letters long, maybe you can use that to recover the rest of the message.",
    "gold": "picoCTF{7R4N5P051N6_15_3XP3N51V3_A9AFB178}",
    "source": "https://play.picoctf.org/practice/challenge/312",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 94,
    "query": "This garden contains more than it seems.",
    "gold": "picoCTF{more_than_m33ts_the_3y3657BaB2C}",
    "source": "https://play.picoctf.org/practice/challenge/44",
    "tags": ["Forensics"]
  },
  {
    "task_id": 95,
    "query": "Your goal is to find the flag. compress_and_attack.py nc mercury.picoctf.net 2431",
    "gold": "picoCTF{sheriff_you_solved_the_crime}",
    "source": "https://play.picoctf.org/practice/challenge/127",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 96,
    "query": "We found a leak of a blackmarket website's login credentials. Can you find the password of the user cultiris and successfully decrypt it? The first user in usernames.txt corresponds to the first password in passwords.txt. The second user corresponds to the second password, and so on.",
    "gold": "picoCTF{C7r1F_54V35_71M3}",
    "source": "https://play.picoctf.org/practice/challenge/261",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 97,
    "query": "You will find the flag after decrypting this file",
    "gold": "picoCTF{r0tat1on_d3crypt3d_a4b7d759}",
    "source": "https://play.picoctf.org/practice/challenge/373",
    "tags": ["Cryptography"]
  },
  {
    "task_id": 98,
    "query": "Can you figure out what is in the eax register in the given assembly dump? Put your answer in the picoCTF flag format: picoCTF{n} where n is the contents of the eax register in the decimal number base. If the answer was 0x11 your flag would be picoCTF{17}.",
    "gold": "picoCTF{48}",
    "source": "https://play.picoctf.org/practice/challenge/391",
    "tags": ["Reverse Engineering"]
  },
  {
    "task_id": 99,
    "query": "Can you figure out what is in the eax register in the given assembly dump? Put your answer in the picoCTF flag format: picoCTF{n} where n is the contents of the eax register in the decimal number base. If the answer was 0x11 your flag would be picoCTF{17}.",
    "gold": "picoCTF{654773}",
    "source": "https://play.picoctf.org/practice/challenge/394",
    "tags": ["Reverse Engineering"]
  }
]